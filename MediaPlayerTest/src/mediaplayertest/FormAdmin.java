/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mediaplayertest;

import com.stripbandunk.jwidget.model.DefaultPaginationModel;
import db.Koneksi;
import java.awt.Image;
import java.awt.List;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage; //colormode
import java.io.File; //upload file
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException; //untuk penentuan jenis data seperti jpg
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Blob; //untuk mengambil type data blob pada database
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level; //jenis user
import java.util.logging.Logger; //pencatatan waktu
import javax.imageio.ImageIO;
import javax.swing.DefaultRowSorter;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog; //error
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author A
 */
public class FormAdmin extends javax.swing.JFrame {
    String loc;
    
    Blob blob;
    BufferedImage img;
    
    Koneksi konek = new Koneksi();
    
    int id_terpilih;
    
    FormAdmin upload;
    int row_terpilih;
    String[] getdata_edit = new String[8];
    
    Connection conn;
    Statement pstmt;
    ResultSet rs;
    PreparedStatement ps;
    
    /**
     * Creates new form formAdmin1
     */
    public void paging(){
        DefaultPaginationModel pagination= new DefaultPaginationModel();
        pagination.setTotalItem(2);
        pagination.setPageSize(2);
        jPagination1.setModel(pagination);
    }
    FormAdmin() {
    initComponents();
    tampilkan_data();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        search_Home = new javax.swing.JTextField();
        btn_SearchHome = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_home = new javax.swing.JTable();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        btn_LogOut = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jPagination1 = new com.stripbandunk.jwidget.JPagination();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        search_WatchLater = new javax.swing.JTextField();
        btn_SearchWatchLater = new javax.swing.JButton();
        S_Table = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        search_History = new javax.swing.JTextField();
        btn_SearchHistory = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_choose = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        titleUpload = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        directorUpload = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        actorUpload = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        countryUpload = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        synopsisUpload = new javax.swing.JTextArea();
        btn_upload = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        yearUpload = new javax.swing.JComboBox<>();
        cover_upload = new javax.swing.JLabel();
        cbGenre1Upload = new javax.swing.JComboBox<>();
        cbGenre2Upload = new javax.swing.JComboBox<>();
        cbGenre3Upload = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btn_ChooseUpdate = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        titleUpdate = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        directorUpdate = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        actorUpdate = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        countryUpdate = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        synopsisUpdate = new javax.swing.JTextArea();
        btn_update = new javax.swing.JButton();
        jLabel39 = new javax.swing.JLabel();
        yearUpdate = new javax.swing.JComboBox<>();
        cover_update = new javax.swing.JLabel();
        cbGenre1Update = new javax.swing.JComboBox<>();
        cbGenre2Update = new javax.swing.JComboBox<>();
        cbGenre3Update = new javax.swing.JComboBox<>();
        jLabel40 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search_Home.setText("search");
        search_Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_HomeMouseClicked(evt);
            }
        });
        search_Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_HomeActionPerformed(evt);
            }
        });
        jPanel1.add(search_Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 130, 30));

        btn_SearchHome.setBackground(new java.awt.Color(204, 204, 255));
        btn_SearchHome.setText("search");
        btn_SearchHome.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        btn_SearchHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchHomeActionPerformed(evt);
            }
        });
        jPanel1.add(btn_SearchHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 70, 30));

        table_home.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title", "Year", "Actor/Actress"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_homeMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table_home);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 630, 190));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel26.setText("Movies");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, -1, 30));

        jLabel27.setFont(new java.awt.Font("Felix Titling", 1, 28)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("HOME");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 130, 60));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/movie icon.png"))); // NOI18N
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, 50));

        btn_LogOut.setText("LOGOUT");
        btn_LogOut.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 102, 0), null));
        btn_LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LogOutActionPerformed(evt);
            }
        });
        jPanel1.add(btn_LogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 90, 40));

        btnHapus.setText("Delete");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jPanel1.add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, -1, 30));
        jPanel1.add(jPagination1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, -1, -1));

        jButton1.setText("Detail");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, 30));

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, -1, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/siapatauperlu22.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 560));

        jTabbedPane1.addTab("Home", jPanel1);

        jPanel4.setLayout(null);

        jLabel3.setBackground(new java.awt.Color(204, 204, 255));
        jLabel3.setFont(new java.awt.Font("Felix Titling", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("WATCH LATER");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(40, 10, 260, 50);

        search_WatchLater.setText("search");
        search_WatchLater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_WatchLaterActionPerformed(evt);
            }
        });
        jPanel4.add(search_WatchLater);
        search_WatchLater.setBounds(0, 70, 130, 30);

        btn_SearchWatchLater.setBackground(new java.awt.Color(204, 204, 255));
        btn_SearchWatchLater.setText("search");
        btn_SearchWatchLater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchWatchLaterActionPerformed(evt);
            }
        });
        jPanel4.add(btn_SearchWatchLater);
        btn_SearchWatchLater.setBounds(140, 70, 70, 30);

        S_Table.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Date", "Title A-Z" }));
        S_Table.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_TableActionPerformed(evt);
            }
        });
        jPanel4.add(S_Table);
        S_Table.setBounds(520, 70, 110, 30);

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD, jLabel4.getFont().getSize()+6));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Movies");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(0, 120, 630, 30);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title", "Year", "Actor/Actress"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel4.add(jScrollPane2);
        jScrollPane2.setBounds(0, 160, 630, 190);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Sort by");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(460, 70, 70, 30);

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/movie icon.png"))); // NOI18N
        jPanel4.add(jLabel29);
        jLabel29.setBounds(0, 10, 42, 42);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/siapatauperlu22.jpg"))); // NOI18N
        jLabel10.setText("jLabel10");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(0, -80, 640, 640);

        jTabbedPane1.addTab("Watch Later", jPanel4);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Felix Titling", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("HISTORY");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 220, 50));

        search_History.setText("search");
        search_History.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_HistoryActionPerformed(evt);
            }
        });
        jPanel3.add(search_History, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 130, 30));

        btn_SearchHistory.setBackground(new java.awt.Color(204, 204, 255));
        btn_SearchHistory.setText("search");
        btn_SearchHistory.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        btn_SearchHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchHistoryActionPerformed(evt);
            }
        });
        jPanel3.add(btn_SearchHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 70, 30));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Date", "Title A-Z" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 110, 30));

        jLabel2.setBackground(new java.awt.Color(204, 255, 204));
        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() | java.awt.Font.BOLD, jLabel2.getFont().getSize()+6));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Movies");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 630, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title", "Year", "Actor/Actress"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 630, 190));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Sort by");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 60, 30));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/movie icon.png"))); // NOI18N
        jPanel3.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, 50));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/siapatauperlu22.jpg"))); // NOI18N
        jLabel12.setText("jLabel12");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 640, 500));

        jTabbedPane1.addTab("History", jPanel3);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setBackground(new java.awt.Color(255, 255, 255));
        label3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label3.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        label3.setPreferredSize(new java.awt.Dimension(100, 24));
        label3.setText("Pertanyaan yang sering diajukan");
        jPanel5.add(label3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 270, 30));

        jLabel9.setBackground(new java.awt.Color(153, 51, 0));
        jLabel9.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Saya mengalami masalah masuk ke situs dengan username / password");
        jLabel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 560, 60));

        jLabel14.setBackground(new java.awt.Color(204, 51, 0));
        jLabel14.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Siapa yang bisa menambahkan data ke judul?");
        jLabel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 560, 60));

        jLabel15.setBackground(new java.awt.Color(204, 51, 0));
        jLabel15.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Bagaimana menghitung rating untuk sebuah film?");
        jLabel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 560, 60));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/siapatauperlu22.jpg"))); // NOI18N
        jLabel13.setText("jLabel13");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 640, 520));

        jTabbedPane1.addTab("Help", jPanel5);

        jPanel2.setLayout(null);

        btn_choose.setText("Choose");
        btn_choose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chooseActionPerformed(evt);
            }
        });
        jPanel2.add(btn_choose);
        btn_choose.setBounds(70, 0, 90, 20);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Cover :");
        jPanel2.add(jLabel17);
        jLabel17.setBounds(10, 0, 60, 20);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Title :");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(10, 30, 40, 15);
        jPanel2.add(titleUpload);
        titleUpload.setBounds(80, 30, 190, 30);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Year :");
        jPanel2.add(jLabel19);
        jLabel19.setBounds(10, 70, 40, 15);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Genre :");
        jPanel2.add(jLabel20);
        jLabel20.setBounds(10, 120, 50, 15);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Director :");
        jPanel2.add(jLabel21);
        jLabel21.setBounds(10, 170, 60, 15);

        directorUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directorUploadActionPerformed(evt);
            }
        });
        jPanel2.add(directorUpload);
        directorUpload.setBounds(80, 160, 200, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Actor :");
        jPanel2.add(jLabel22);
        jLabel22.setBounds(10, 220, 50, 15);

        actorUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actorUploadActionPerformed(evt);
            }
        });
        jPanel2.add(actorUpload);
        actorUpload.setBounds(80, 210, 200, 30);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Country :");
        jPanel2.add(jLabel23);
        jLabel23.setBounds(10, 270, 60, 15);
        jPanel2.add(countryUpload);
        countryUpload.setBounds(80, 260, 200, 30);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Synopsis :");
        jPanel2.add(jLabel24);
        jLabel24.setBounds(10, 310, 60, 15);

        synopsisUpload.setColumns(20);
        synopsisUpload.setRows(5);
        jScrollPane1.setViewportView(synopsisUpload);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(80, 310, 310, 120);

        btn_upload.setText("Upload");
        btn_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_uploadActionPerformed(evt);
            }
        });
        jPanel2.add(btn_upload);
        btn_upload.setBounds(80, 450, 70, 30);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText(".jpg");
        jPanel2.add(jLabel25);
        jLabel25.setBounds(160, 0, 40, 20);

        yearUpload.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2014", "2015", "2016", "2017" }));
        jPanel2.add(yearUpload);
        yearUpload.setBounds(80, 70, 100, 30);

        cover_upload.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cover_upload.setForeground(new java.awt.Color(255, 255, 255));
        cover_upload.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cover_upload.setText("Cover movie");
        cover_upload.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(cover_upload);
        cover_upload.setBounds(430, 230, 180, 190);

        cbGenre1Upload.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Action", "Adventure", "Animation", "Bibiography", "Crime", "Comedy", "Documentary", "Family", "Fantacy", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriler", "War", "Western" }));
        cbGenre1Upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGenre1UploadActionPerformed(evt);
            }
        });
        jPanel2.add(cbGenre1Upload);
        cbGenre1Upload.setBounds(80, 110, 130, 30);

        cbGenre2Upload.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Action", "Adventure", "Animation", "Bibiography", "Crime", "Comedy", "Documentary", "Family", "Fantacy", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriler", "War", "Western" }));
        jPanel2.add(cbGenre2Upload);
        cbGenre2Upload.setBounds(240, 110, 150, 30);

        cbGenre3Upload.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Action", "Adventure", "Animation", "Bibiography", "Crime", "Comedy", "Documentary", "Family", "Fantacy", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriler", "War", "Western" }));
        jPanel2.add(cbGenre3Upload);
        cbGenre3Upload.setBounds(430, 110, 140, 30);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/siapatauperlu22.jpg"))); // NOI18N
        jPanel2.add(jLabel7);
        jLabel7.setBounds(0, -180, 650, 730);

        jTabbedPane1.addTab("Upload", jPanel2);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setLayout(null);

        btn_ChooseUpdate.setText("Choose");
        btn_ChooseUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChooseUpdateActionPerformed(evt);
            }
        });
        jPanel7.add(btn_ChooseUpdate);
        btn_ChooseUpdate.setBounds(70, 0, 90, 20);

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Cover :");
        jPanel7.add(jLabel31);
        jLabel31.setBounds(10, 0, 60, 20);

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Title :");
        jPanel7.add(jLabel32);
        jLabel32.setBounds(10, 30, 40, 15);

        titleUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleUpdateMouseClicked(evt);
            }
        });
        titleUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleUpdateActionPerformed(evt);
            }
        });
        jPanel7.add(titleUpdate);
        titleUpdate.setBounds(70, 30, 190, 30);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Year :");
        jPanel7.add(jLabel33);
        jLabel33.setBounds(10, 70, 40, 15);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Genre :");
        jPanel7.add(jLabel34);
        jLabel34.setBounds(10, 120, 50, 15);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Director :");
        jPanel7.add(jLabel35);
        jLabel35.setBounds(10, 170, 60, 15);

        directorUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                directorUpdateMouseClicked(evt);
            }
        });
        jPanel7.add(directorUpdate);
        directorUpdate.setBounds(70, 160, 200, 30);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Actor :");
        jPanel7.add(jLabel36);
        jLabel36.setBounds(10, 230, 50, 15);

        actorUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actorUpdateMouseClicked(evt);
            }
        });
        jPanel7.add(actorUpdate);
        actorUpdate.setBounds(70, 220, 200, 30);

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Country :");
        jPanel7.add(jLabel37);
        jLabel37.setBounds(10, 280, 60, 15);

        countryUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                countryUpdateMouseClicked(evt);
            }
        });
        jPanel7.add(countryUpdate);
        countryUpdate.setBounds(70, 270, 200, 30);

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Synopsis :");
        jPanel7.add(jLabel38);
        jLabel38.setBounds(10, 320, 60, 15);

        synopsisUpdate.setColumns(20);
        synopsisUpdate.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        synopsisUpdate.setRows(5);
        synopsisUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                synopsisUpdateMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(synopsisUpdate);

        jPanel7.add(jScrollPane5);
        jScrollPane5.setBounds(70, 320, 330, 110);

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        jPanel7.add(btn_update);
        btn_update.setBounds(70, 440, 70, 30);

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText(".jpg");
        jPanel7.add(jLabel39);
        jLabel39.setBounds(160, 0, 40, 20);

        yearUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2014", "2015", "2016", "2017" }));
        jPanel7.add(yearUpdate);
        yearUpdate.setBounds(70, 70, 90, 20);

        cover_update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cover_update.setForeground(new java.awt.Color(255, 255, 255));
        cover_update.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cover_update.setText("Cover movie");
        cover_update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.add(cover_update);
        cover_update.setBounds(430, 230, 180, 190);

        cbGenre1Update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Action", "Adventure", "Animation", "Bibiography", "Crime", "Comedy", "Documentary", "Family", "Fantacy", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriler", "War", "Western" }));
        jPanel7.add(cbGenre1Update);
        cbGenre1Update.setBounds(70, 110, 120, 30);

        cbGenre2Update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Action", "Adventure", "Animation", "Bibiography", "Crime", "Comedy", "Documentary", "Family", "Fantacy", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriler", "War", "Western" }));
        jPanel7.add(cbGenre2Update);
        cbGenre2Update.setBounds(240, 110, 120, 30);

        cbGenre3Update.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Action", "Adventure", "Animation", "Bibiography", "Crime", "Comedy", "Documentary", "Family", "Fantacy", "History", "Horror", "Music", "Musical", "Mystery", "Romance", "Sci-Fi", "Sport", "Thriler", "War", "Western" }));
        jPanel7.add(cbGenre3Update);
        cbGenre3Update.setBounds(430, 110, 120, 30);

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background/siapatauperlu22.jpg"))); // NOI18N
        jPanel7.add(jLabel40);
        jLabel40.setBounds(0, -170, 650, 730);

        jPanel6.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 630));

        jTabbedPane1.addTab("Update", jPanel6);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        java.sql.Date dateOfLastUpdate=null;
        
        /*Sort the Table
                    DefaultRowSorter sorter = ((DefaultRowSorter)allRevenueTable.getRowSorter()); 
                    ArrayList list = new ArrayList();
                    list.add( new RowSorter.SortKey(0, SortOrder.DESCENDING) );
                    sorter.setSortKeys(list);
                    sorter.sort();
        */
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void search_HistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_HistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_HistoryActionPerformed

    private void S_TableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_TableActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_S_TableActionPerformed

    private void search_WatchLaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_WatchLaterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_WatchLaterActionPerformed

    private void search_HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_HomeActionPerformed
       
    }//GEN-LAST:event_search_HomeActionPerformed

    private void btn_chooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chooseActionPerformed
        JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            loc = fc.getSelectedFile().getAbsolutePath();
            
            BufferedImage img = null;
            try{
                img = ImageIO.read(new File(loc));
            } catch(IOException e){
                System.out.println(e.getMessage());
            }
            Image newImg = img.getScaledInstance(cover_upload.getWidth(), cover_upload.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon imgIcon = new ImageIcon(newImg);
            cover_upload.setIcon(imgIcon);
        }
    }//GEN-LAST:event_btn_chooseActionPerformed

    private void btn_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_uploadActionPerformed
        // TODO add your handling code here:
        File fileImg = new File(loc);
        String newImageLoc = "src/chooser/"+fileImg.getName();
        File newFileImg = new File(newImageLoc);
        
        InputStream inStream = null;
        OutputStream outStream = null;
        boolean result = false;
        
        try{
            byte[] buffer = new byte[1024];
            int length;
            
            inStream = new FileInputStream(fileImg);
            outStream = new FileOutputStream(newFileImg);
            
            while((length = inStream.read(buffer)) > 0){
                outStream.write(buffer, 0, length);
            }
            
            inStream.close();
            outStream.close();
        }catch(IOException e){
            System.out.println(e.getMessage());
        }
        
        
        insert(titleUpload.getText(), yearUpload.getSelectedItem().toString(), cbGenre1Upload.getSelectedItem().toString(),
                cbGenre2Upload.getSelectedItem().toString(), cbGenre1Upload.getSelectedItem().toString(), directorUpload.getText(),
                actorUpload.getText(), countryUpload.getText() , synopsisUpload.getText(), newImageLoc );
        
        showMessageDialog(null, "Upload succes!");
        
        this.setVisible(false);
        new FormAdmin().setVisible(true);
    }//GEN-LAST:event_btn_uploadActionPerformed

    private void btn_LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LogOutActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Apakah anda yakin akan LogOut ?","Konfirmasi", JOptionPane.INFORMATION_MESSAGE);
            if (result == JOptionPane.YES_OPTION){
                new LogIn().setVisible(true);
                this.dispose(); 
            }
    }//GEN-LAST:event_btn_LogOutActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        /*
       DefaultTableModel model = (DefaultTableModel) table_home.getModel();
       int row = table_home.getSelectedRow();
            if(row>=0){
                int ok=JOptionPane.showConfirmDialog(null, "Do you want to delete this data? ","Konfirmasi",JOptionPane.YES_NO_OPTION);
                if(ok==0){
                    String sql = "DELETE FROM Movie WHERE title =" + titleUpload.getText()+ "";
                    
                    model.removeRow(row);
                }
        }*/
        
        int row_terpilih = table_home.getSelectedRow();
        if(row_terpilih!=-1){
            DefaultTableModel model = (DefaultTableModel) table_home.getModel();
            String row = table_home.getModel().getValueAt(row_terpilih, 0).toString();
            int selectedOption = JOptionPane.showConfirmDialog(null, "Do you want to delete this data? ", "Data deleted", JOptionPane.YES_NO_OPTION); 
            if (selectedOption == JOptionPane.YES_OPTION) {
                delete(row);
                showMessageDialog(null, "Data deleted success !");
                selectAll();
                model.removeRow(Integer.parseInt(row));
            }
            
        } else {
            showMessageDialog(null, "Please choose row that you want to delete!");
        } 
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btn_ChooseUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChooseUpdateActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int result = fc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            loc = fc.getSelectedFile().getAbsolutePath();
            
            BufferedImage img = null;
            try{
                img = ImageIO.read(new File(loc));
            } catch(IOException e){
                System.out.println(e.getMessage());
            }
            Image newImg = img.getScaledInstance(cover_update.getWidth(), cover_update.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon imgIcon = new ImageIcon(newImg);
            cover_update.setIcon(imgIcon);
        }
    }//GEN-LAST:event_btn_ChooseUpdateActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        String title = titleUpdate.getText();
        int year = yearUpdate.getSelectedIndex();
        int genre1 = cbGenre1Update.getSelectedIndex();
        int genre2 = cbGenre2Update.getSelectedIndex();
        int genre3 = cbGenre3Update.getSelectedIndex();
        String director = directorUpdate.getText();
        String actor = actorUpdate.getText();
        String country = countryUpdate.getText();
        String synopsis = synopsisUpdate.getText();
        
        update (id_terpilih, title, year, genre1, genre2, genre3, director, actor, country, synopsis);
        showMessageDialog(null, "Data tidak ditemukan!");
        
        this.dispose();
    }//GEN-LAST:event_btn_updateActionPerformed

    
    private void btn_SearchHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchHomeActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel MyTable = new DefaultTabelModel();
        MyTable.addColumn("TITLE");
        MyTable.addColumn("YEAR");
        MyTable.addColumn("GENRE");
        try(Connection conn = konek.connect()){
        String sql = "Select * from Movie Where title LIKE '%"+search_Home.getText()+ "%'" 
                + "or year like '%" + search_Home.getText() + "%' "
                + "or genre1 like '%" + search_Home.getText() + "%' "
                + "or genre2 like '%" + search_Home.getText() + "%' "
                + "or genre3 like '%" + search_Home.getText() + "%' ";
        pstmt=conn.createStatement();
        rs=pstmt.executeQuery(sql);
        while(rs.next()){
            MyTable.addRow(new Object[]{
            rs.getString(2),
            rs.getString(3),
            rs.getString(4),
            });
            System.out.println("sukseessss");
        }
        table_home.setModel(MyTable);
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }//GEN-LAST:event_btn_SearchHomeActionPerformed

    private void search_HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_HomeMouseClicked
        search_Home.setText("");
    }//GEN-LAST:event_search_HomeMouseClicked

    private void directorUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directorUploadActionPerformed
        
        cbGenre1Upload.getSelectedItem();
        
    }//GEN-LAST:event_directorUploadActionPerformed

    private void actorUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actorUploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actorUploadActionPerformed

    private void titleUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleUpdateMouseClicked
        titleUpdate.setText("");
    }//GEN-LAST:event_titleUpdateMouseClicked

    private void actorUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actorUpdateMouseClicked
        actorUpdate.setText("");
    }//GEN-LAST:event_actorUpdateMouseClicked

    private void synopsisUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_synopsisUpdateMouseClicked
        synopsisUpdate.setText("");
    }//GEN-LAST:event_synopsisUpdateMouseClicked

    private void countryUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_countryUpdateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_countryUpdateMouseClicked

    private void directorUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_directorUpdateMouseClicked
        directorUpdate.setText("");
    }//GEN-LAST:event_directorUpdateMouseClicked

    private void btn_SearchWatchLaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchWatchLaterActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel MyTable = new DefaultTabelModel();
        MyTable.addColumn("TITLE");
        MyTable.addColumn("YEAR");
        try(Connection conn = konek.connect()){
        String sql = "Select * from Movie Where title LIKE '%"+search_WatchLater.getText()+ "%'" 
                + "or year like '%" + search_WatchLater.getText() + "%' ";
        pstmt=conn.createStatement();
        rs=pstmt.executeQuery(sql);
        while(rs.next()){
            MyTable.addRow(new Object[]{
            rs.getString(2),
            rs.getString(3),
            rs.getString(4),
            });
        }
        table_home.setModel(MyTable);
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btn_SearchWatchLaterActionPerformed

    private void btn_SearchHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchHistoryActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel MyTable = new DefaultTabelModel();
        MyTable.addColumn("TITLE");
        MyTable.addColumn("YEAR");
        try(Connection conn = konek.connect()){
        String sql = "Select * from Movie Where title LIKE '%"+search_History.getText()+ "%'" 
                + "or year like '%" + search_History.getText() + "%' ";
        pstmt=conn.createStatement();
        rs=pstmt.executeQuery(sql);
        while(rs.next()){
            MyTable.addRow(new Object[]{
            rs.getString(2),
            rs.getString(3),
            rs.getString(4),
            });
        }
        table_home.setModel(MyTable);
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btn_SearchHistoryActionPerformed

    private void table_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_homeMouseClicked
        // TODO add your handling code here:                                       
        table_home.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    JTable target = (JTable)e.getSource();
                    int row = target.getSelectedRow();
                    new Detail().setVisible(true);
                    
                }
            }
        });
    }//GEN-LAST:event_table_homeMouseClicked

    private void titleUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleUpdateActionPerformed

    private void cbGenre1UploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGenre1UploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGenre1UploadActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_home.getModel();
        int row = table_home.getSelectedRow();
            if(row != -1){
                    Movie x = new Movie();
                    x.setTitle((String)table_home.getValueAt(row, 0));
                    Detail y = new Detail(x);
                    y.setVisible(true);
            } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) table_home.getModel();
        int row = table_home.getSelectedRow();
            if(row != -1){
                    Movie x = new Movie();
                    x.setTitle((String)table_home.getValueAt(row, 0));
                    Update y = new Update(x);
                    y.setVisible(true);
            }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public void update(int id_terpilih, String title, int year, int genre1, int genre2, int genre3, String director, String actor, String country, String synopsis){
        String sql = "UPDATE Movie SET title = ? ," + "year = ? ," + " genre1 = ?," + "genre2 = ?," +"genre3 =?," + "director = ? ," + "actor = ? ," + "country = ? ," + "synopsis = ? WHERE id_movie";
        try (Connection conn = konek.connect();
            PreparedStatement pstmt = conn.prepareStatement(sql)){
            pstmt.setString(1, title);
            pstmt.setInt(2, year);
            pstmt.setInt(3, genre1);
            pstmt.setInt(4, genre2);
            pstmt.setInt(5, genre3);
            pstmt.setString(6, director);
            pstmt.setString(7, actor);
            pstmt.setString(8, country);
            pstmt.setString(9, synopsis);
            pstmt.executeUpdate();
            
            pstmt.close();
            conn.close();
        } catch(SQLException e){
            System.out.println(e.getMessage());
        }
    }
    
    public void tampilkan_data(){
        DefaultTableModel user = (DefaultTableModel)table_home.getModel();
        while(user.getRowCount() > 0){
            user.removeRow(0);
        }
        
        String sql = "SELECT title, year, actor FROM Movie";
        
        try (Connection conn = konek.connect();
             Statement stmt  = conn.createStatement();
             ResultSet rs    = stmt.executeQuery(sql)){
              
             //To remove previously added rows
            while(table_home.getRowCount() > 0){
                ((DefaultTableModel) table_home.getModel()).removeRow(0);
            }

            //Hitung jumlah kolom
            ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();
                
            while (rs.next()){
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {  
                    row[i - 1] = rs.getObject(i);
                    System.out.println(rs.getObject(i));
                }
                ((DefaultTableModel) table_home.getModel()).insertRow(rs.getRow()-1,row);
            }
            // Tutup koneksi
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    public void delete(String id_terpilih){
        Connection conn = konek.connect();
        String sql = "DELETE FROM Movie WHERE title = ?";
        
        try(PreparedStatement pstmt = conn.prepareStatement(sql)){
            pstmt.setString(1, id_terpilih);
            pstmt.executeUpdate();
            
        } catch (SQLException e){
            System.out.println(e.getMessage());
        }
    }
        
    public void selectAll(){
        try {
            Connection conn = konek.connect();
            PreparedStatement pstmt = conn.prepareStatement("Select id_movie, title, year, actor, directory, country, synopsis from Movie");
            pstmt.setString(1, titleUpload.getText());
            pstmt.setInt(2, yearUpload.getSelectedIndex());
            pstmt.setString(3, directorUpload.getText());
            pstmt.setString(4, actorUpload.getText());
            pstmt.setString(5, countryUpload.getText());
            pstmt.setString(6, synopsisUpload.getText());
            
            ResultSet rs = pstmt.executeQuery();
              
             //To remove previously added rows
            while(table_home.getRowCount() > 0){
                ((DefaultTableModel) table_home.getModel()).removeRow(0);
            }

            while (rs.next()){
                //Count the number of column
                
                ResultSetMetaData md = rs.getMetaData();
                int columns = md.getColumnCount();
                
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++){  
                    row[i - 1] = rs.getObject(i);
                }
                ((DefaultTableModel) table_home.getModel()).insertRow(rs.getRow()-1,row);
                
            }
            
            // Tutup koneksi
            rs.close();
            pstmt.close();
            conn.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } 
    }
    
    public void insert(String title, String year, String genre1, String genre2, String genre3, String director, String actor, String country, String sinopsis, String cover){
        String sql = "INSERT INTO Movie(title, year, genre1, genre2, genre3, director, actor, country, synopsis, cover)" +
                "VALUES('" + title + "','" + year + "','" + genre1 +"','" +genre2+ "','" + genre3 + "','" + director + "','" + actor + "','" + country + "','" +sinopsis+ "','" + cover + "')";
        try (Connection con = konek.connect();
            PreparedStatement pstmt = con.prepareStatement(sql)) {
            pstmt.executeUpdate();
              //selectAll();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> S_Table;
    private javax.swing.JTextField actorUpdate;
    private javax.swing.JTextField actorUpload;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btn_ChooseUpdate;
    private javax.swing.JButton btn_LogOut;
    private javax.swing.JButton btn_SearchHistory;
    private javax.swing.JButton btn_SearchHome;
    private javax.swing.JButton btn_SearchWatchLater;
    private javax.swing.JButton btn_choose;
    private javax.swing.JButton btn_update;
    private javax.swing.JButton btn_upload;
    private javax.swing.JComboBox<String> cbGenre1Update;
    private javax.swing.JComboBox<String> cbGenre1Upload;
    private javax.swing.JComboBox<String> cbGenre2Update;
    private javax.swing.JComboBox<String> cbGenre2Upload;
    private javax.swing.JComboBox<String> cbGenre3Update;
    private javax.swing.JComboBox<String> cbGenre3Upload;
    private javax.swing.JTextField countryUpdate;
    private javax.swing.JTextField countryUpload;
    private javax.swing.JLabel cover_update;
    private javax.swing.JLabel cover_upload;
    private javax.swing.JTextField directorUpdate;
    private javax.swing.JTextField directorUpload;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.stripbandunk.jwidget.JPagination jPagination1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private java.awt.Label label3;
    private javax.swing.JTextField search_History;
    private javax.swing.JTextField search_Home;
    private javax.swing.JTextField search_WatchLater;
    private javax.swing.JTextArea synopsisUpdate;
    private javax.swing.JTextArea synopsisUpload;
    private javax.swing.JTable table_home;
    private javax.swing.JTextField titleUpdate;
    private javax.swing.JTextField titleUpload;
    private javax.swing.JComboBox<String> yearUpdate;
    private javax.swing.JComboBox<String> yearUpload;
    // End of variables declaration//GEN-END:variables

    private static class DefaultTabelModel extends DefaultTableModel {

        public DefaultTabelModel() {
        }
    }
}
